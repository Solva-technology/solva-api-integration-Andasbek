import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from app.keyboards.inline import weather_city_keyboard
from app.services.weather_client import WeatherClient, WeatherError
from app.services.mongo_client import Mongo
from app.services.sessions import record, is_blocked

router = Router(name="weather")
logger = logging.getLogger("app.weather")


class WeatherStates(StatesGroup):
    waiting_city = State()


@router.callback_query(F.data == "weather:ask_city")
async def ask_city(cb: CallbackQuery, state: FSMContext):
    await state.set_state(WeatherStates.waiting_city)
    await cb.message.edit_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ê–ª–º–∞—Ç—ã).")
    await cb.answer()


@router.message(WeatherStates.waiting_city)
async def city_received(message: Message, state: FSMContext):
    city = message.text.strip()
    await state.clear()
    await message.answer(
        f"–ì–æ—Ä–æ–¥: <b>{city}</b>\n–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ø–æ–≥–æ–¥—É:",
        reply_markup=weather_city_keyboard(city)
    )


@router.callback_query(F.data.startswith("weather:get:"))
async def get_weather(cb: CallbackQuery):
    user_id = cb.from_user.id
    record(user_id)
    if is_blocked(user_id):
        await cb.answer("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 2 –º–∏–Ω—É—Ç—ã üôè", show_alert=True)
        return

    _, _, city = cb.data.partition("weather:get:")
    city = city.strip()

    client = WeatherClient()
    try:
        data = await client.get_current(city=city)
        # –ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
        name = data.get("name", city)
        main = data.get("weather", [{}])[0].get("description", "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        temp = data.get("main", {}).get("temp")
        feels = data.get("main", {}).get("feels_like")
        wind = data.get("wind", {}).get("speed")

        text = (
            f"–ü–æ–≥–æ–¥–∞ –≤ <b>{name}</b>:\n"
            f"‚Ä¢ {main}\n"
            f"‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp} ¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels} ¬∞C)\n"
            f"‚Ä¢ –í–µ—Ç–µ—Ä: {wind} –º/—Å"
        )

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ MongoDB
        await Mongo.save_weather_request(city=city, payload=data)

        await cb.message.edit_text(text)
        await cb.answer()
    except WeatherError as e:
        await cb.message.edit_text(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n"
            f"–ü—Ä–∏—á–∏–Ω–∞: {e}"
        )
        await cb.answer()
